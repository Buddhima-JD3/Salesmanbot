{"ast":null,"code":"var _jsxFileName = \"D:\\\\SLIIT\\\\3rd Year\\\\2nd Sem\\\\CCP\\\\Dev\\\\Salesmanbot\\\\admin-frontend\\\\src\\\\views\\\\Test.js\";\nimport React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignupSchema = Yup.object().shape({\n  firstName: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Required'),\n  lastName: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Required'),\n  email: Yup.string().email('Invalid email').required('Required')\n});\nexport const ValidationSchemaExample = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Signup\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: ''\n    },\n    validationSchema: SignupSchema,\n    onSubmit: values => {\n      // same shape as initial values\n      console.log(values);\n    },\n    children: _ref => {\n      let {\n        errors,\n        touched\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"firstName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), errors.firstName && touched.firstName ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: errors.firstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this) : null, /*#__PURE__*/_jsxDEV(Field, {\n          name: \"lastName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), errors.lastName && touched.lastName ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: errors.lastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this) : null, /*#__PURE__*/_jsxDEV(Field, {\n          name: \"email\",\n          type: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), errors.email && touched.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 54\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 18,\n  columnNumber: 5\n}, this);\n_c = ValidationSchemaExample;\n\nvar _c;\n\n$RefreshReg$(_c, \"ValidationSchemaExample\");","map":{"version":3,"sources":["D:/SLIIT/3rd Year/2nd Sem/CCP/Dev/Salesmanbot/admin-frontend/src/views/Test.js"],"names":["React","Formik","Form","Field","Yup","SignupSchema","object","shape","firstName","string","min","max","required","lastName","email","ValidationSchemaExample","values","console","log","errors","touched"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,QAApC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;AAEA,MAAMC,YAAY,GAAGD,GAAG,CAACE,MAAJ,GAAaC,KAAb,CAAmB;AACpCC,EAAAA,SAAS,EAAEJ,GAAG,CAACK,MAAJ,GACNC,GADM,CACF,CADE,EACC,YADD,EAENC,GAFM,CAEF,EAFE,EAEE,WAFF,EAGNC,QAHM,CAGG,UAHH,CADyB;AAKpCC,EAAAA,QAAQ,EAAET,GAAG,CAACK,MAAJ,GACLC,GADK,CACD,CADC,EACE,YADF,EAELC,GAFK,CAED,EAFC,EAEG,WAFH,EAGLC,QAHK,CAGI,UAHJ,CAL0B;AASpCE,EAAAA,KAAK,EAAEV,GAAG,CAACK,MAAJ,GAAaK,KAAb,CAAmB,eAAnB,EAAoCF,QAApC,CAA6C,UAA7C;AAT6B,CAAnB,CAArB;AAYA,OAAQ,MAAMG,uBAAuB,GAAG,mBACpC;AAAA,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,eAEI,QAAC,MAAD;AACI,IAAA,aAAa,EAAE;AACXP,MAAAA,SAAS,EAAE,EADA;AAEXK,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,KAAK,EAAE;AAHI,KADnB;AAMI,IAAA,gBAAgB,EAAET,YANtB;AAOI,IAAA,QAAQ,EAAEW,MAAM,IAAI;AAChB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACH,KAVL;AAAA,cAYK;AAAA,UAAC;AAAEG,QAAAA,MAAF;AAAUC,QAAAA;AAAV,OAAD;AAAA,0BACG,QAAC,IAAD;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKD,MAAM,CAACX,SAAP,IAAoBY,OAAO,CAACZ,SAA5B,gBACG;AAAA,oBAAMW,MAAM,CAACX;AAAb;AAAA;AAAA;AAAA;AAAA,gBADH,GAEG,IAJR,eAKI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBALJ,EAMKW,MAAM,CAACN,QAAP,IAAmBO,OAAO,CAACP,QAA3B,gBACG;AAAA,oBAAMM,MAAM,CAACN;AAAb;AAAA;AAAA;AAAA;AAAA,gBADH,GAEG,IARR,eASI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,IAAI,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,gBATJ,EAUKM,MAAM,CAACL,KAAP,IAAgBM,OAAO,CAACN,KAAxB,gBAAgC;AAAA,oBAAMK,MAAM,CAACL;AAAb;AAAA;AAAA;AAAA;AAAA,gBAAhC,GAA4D,IAVjE,eAWI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADH;AAAA;AAZL;AAAA;AAAA;AAAA;AAAA,UAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,QADI;KAAMC,uB","sourcesContent":["import React from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst SignupSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n        .min(2, 'Too Short!')\r\n        .max(50, 'Too Long!')\r\n        .required('Required'),\r\n    lastName: Yup.string()\r\n        .min(2, 'Too Short!')\r\n        .max(50, 'Too Long!')\r\n        .required('Required'),\r\n    email: Yup.string().email('Invalid email').required('Required'),\r\n});\r\n\r\nexport  const ValidationSchemaExample = () => (\r\n    <div>\r\n        <h1>Signup</h1>\r\n        <Formik\r\n            initialValues={{\r\n                firstName: '',\r\n                lastName: '',\r\n                email: '',\r\n            }}\r\n            validationSchema={SignupSchema}\r\n            onSubmit={values => {\r\n                // same shape as initial values\r\n                console.log(values);\r\n            }}\r\n        >\r\n            {({ errors, touched }) => (\r\n                <Form>\r\n                    <Field name=\"firstName\" />\r\n                    {errors.firstName && touched.firstName ? (\r\n                        <div>{errors.firstName}</div>\r\n                    ) : null}\r\n                    <Field name=\"lastName\" />\r\n                    {errors.lastName && touched.lastName ? (\r\n                        <div>{errors.lastName}</div>\r\n                    ) : null}\r\n                    <Field name=\"email\" type=\"email\" />\r\n                    {errors.email && touched.email ? <div>{errors.email}</div> : null}\r\n                    <button type=\"submit\">Submit</button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    </div>\r\n);"]},"metadata":{},"sourceType":"module"}